// =============================================
//              Callout Panels
//          Last Updated:2013-4-24
// =============================================




%callout {
  position:relative;
  word-wrap:break-word;
  padding:1em;
  background:$button-color;
  border:1px solid $button-active;
  color:$button-text;
  margin-bottom:15px;
  @include rounded($radius);
  // content overrides
  h1, h2, h3, h4, h5, h6, p {
    color:inherit;
  }
  *:last-child {
    margin-bottom:0;
  }
}
%small-callout {
  font-size:0.8em;
}
%large-callout {
  font-size:1.5em;
}
%info-callout {
  background-color:$info-background;
  color:$info-color;
  border-color:$info-border;
}
%alert-callout{
  background-color:$alert-background;
  color:$alert-color;
  border-color:$alert-border;
}
%warning-callout {
  background:$warning-background;
  color:$warning-color;
  border-color:$warning-border;
}
%error-callout {
  background:$error-background;
  color:$error-color;
  border-color:$error-border;
}
%success-callout {
  background:$success-background;
  color:$success-color;
  border-color:$success-border;
}
%square-callout {
  @include rounded(0);
}
%round-callout {
  @include rounded(9999px);
}
%disabled-callout {
  @include state(disabled);
}
%dismissible-callout {
  padding-right:3em;
  &:after {
    content:'X';
    display:block;
    padding:0.5em 0;
    font-size:0.8em;
    text-align:center;
    position:absolute;
    top:0;
    right:1em;
    line-height:1.5;
  }
}

@mixin callout_modifiers() {
  $modifiers: small large info alert warning error success square round disabled;
  @for $i from 1 through length($modifiers) {
    &.#{nth($modifiers, $i)} {
      @extend %#{nth($modifiers, $i)}-callout;
    }
  }
}

@if $classes {
  .callout {
    @extend %callout;
    @include callout_modifiers;
  }
}
@if $aria {
  [role~=status] {
    @extend %callout;
    @if $classes {
      @include callout_modifiers;
    }
  }
}
